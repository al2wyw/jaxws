package test;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import java.util.List;

import step2.JAXB2Tester;
import step3.Builder;
import step3.Guitar;
import step3.Guitars;
import step3.Top;

import javax.xml.XMLConstants;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.PropertyException;
import javax.xml.bind.Unmarshaller;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.dom.DOMResult;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.xml.sax.SAXException;

import com.sun.xml.bind.marshaller.CharacterEscapeHandler;

//no need to do this, actually, unmarshall the xml and add a node to the list and then marshall the bean !
//all elements are generated by Document object! it can not append an element from different Document object.
//marshaller can marshall bean to Document node but not Element node!
public class marshallNode {

	public static void main(String[] args) throws ParserConfigurationException, SAXException, IOException, JAXBException {

		Guitar guitar1 = new Guitar();
		guitar1.setBackSides("back sides 3");
		guitar1.setId("test3");
		guitar1.setModel("model 3");
		guitar1.setNotes("this is the note 3 <test>");
		Builder builder1 = new Builder();
		builder1.setSmallShop("true");
		builder1.setValue("10003");
		guitar1.setBuilder(builder1);
		Top top1 = new Top();
		top1.setBearclaw("true");
		top1.setValue("10003");
		guitar1.setTop(top1);
		
		DocumentBuilderFactory df = DocumentBuilderFactory.newInstance();
		df.setNamespaceAware(true);
		DocumentBuilder db = df.newDocumentBuilder();
		Document dom = db.parse(new File("test.xml"));

		JAXBContext context = JAXBContext.newInstance(Guitars.class);//guitars context!!!
		Marshaller m = context.createMarshaller();
		Unmarshaller um = context.createUnmarshaller();
		m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
        m.setProperty(Marshaller.JAXB_ENCODING, "UTF-8");
        m.setProperty(Marshaller.JAXB_SCHEMA_LOCATION,"http://www.mytest.com guitars.xsd");
        m.setProperty(CharacterEscapeHandler.class.getName(), new CharacterEscapeHandler(){
        	
			@Override
			public void escape(char[] arg0, int arg1, int arg2,
					boolean arg3, Writer arg4) throws IOException {
				//do not escape < > &
				arg4.write(arg0,arg1,arg2);
			}
        	
        });
        Schema schema = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI).newSchema(new File("guitars.xsd"));//"http://www.w3.org/2001/XMLSchema"
        m.setSchema(schema);
        um.setSchema(schema);

//        Element node = dom.createElement("guitar");
        m.marshal(guitar1, new File("test1.xml"));//marshall guitar to a file!!!
        
//        Element root = dom.getDocumentElement();//root
//        System.out.println(root.getTagName());
//        
//        root.appendChild(node);
//        
//        Guitars guitars = (Guitars)um.unmarshal(root);
	
	}

}
