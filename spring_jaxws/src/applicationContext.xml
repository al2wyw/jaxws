<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:ws="http://jax-ws.dev.java.net/spring/core"
	xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-2.5.xsd
		 http://www.springframework.org/schema/aop 
		 http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://jax-ws.dev.java.net/spring/core
        http://jax-ws.dev.java.net/spring/core.xsd
        http://jax-ws.dev.java.net/spring/servlet
        http://jax-ws.dev.java.net/spring/servlet.xsd">

    <context:annotation-config />
    
	<wss:binding url="/test">
		<wss:service>
			<ws:service bean="#helloWS" >
				<ws:handlers>
                 <ref bean="validation"/>
             	</ws:handlers>
			</ws:service>
		</wss:service>
	</wss:binding>
	
	

	<bean id="helloWS" class="annotation.test" />
	<bean id="validation" class="handler.validationHandler"/>
	
	<wss:binding url="/people">
		<wss:service>
			<ws:service bean="#peopleWS" >
			</ws:service>
		</wss:service>
	</wss:binding>
	
	<bean id="peopleWS" class="webservice.ShowPeopleService" />
	
	<wss:binding url="/clientIP">
		<wss:service>
			<ws:service bean="#clientWS" >
			</ws:service>
		</wss:service>
	</wss:binding>
	
	<bean id="clientWS" class="webservice.webservicecontext" />
	
	<!-- <bean class="com.myws.serviceImpl.BeanPostProcess"/>-->
	<bean class="com.myws.serviceImpl.initializeBean"></bean>
	<bean id="showservice" class="com.myws.action.ShowServiceAction" init-method="init">
		<property name="action">
			<bean class="com.myws.serviceImpl.ShowURLService"/>
		</property>
	</bean>
	<!-- scope="prototype" -->
	<bean id="savePersonAction" class="com.myws.action.savePersonAction" scope="prototype">
		<property name="action" ref="savePersonService"/>
	</bean>
	<bean id="savePersonService" class="com.myws.serviceImpl.savePersonService">
		<property name="save" ref="savePersonXML"/>
		<property name="saveDB" ref="savePersonNotToDBCaller"/>
		<property name="flag" value="false"/>
	</bean>
	<bean id="savePersonModService" class="com.myws.serviceImpl.savePersonModService">
	</bean>
	<bean id="savePersonXML" class="com.myws.daoImpl.savePersonToXml"></bean>
	<bean id="savePersonDB" class="com.myws.daoImpl.savePersonToDB" autowire="byName">
	</bean>
	<bean id="savePersonNotToDBCaller" class="com.myws.daoImpl.savePersonNotToDBCaller">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
		<property name="action" ref="savePersonNotToDBCallee"/>
	</bean>
	<bean id="savePersonNotToDBCallee" class="com.myws.daoImpl.savePersonNotToDBCallee">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
	</bean>
	
	<bean id="logbeforesave" class="com.myws.serviceImpl.logBeforeAdvisor"/>
	<bean id="logbeforeagainsave" class="com.myws.serviceImpl.logBeforeAgainAdvisor"/>
	<aop:config proxy-target-class="true">
		<aop:pointcut id="test" expression="execution(* *..saveService.saveAction(*)) and args(person)"/>
		<aop:pointcut id="save" expression="execution(* *..savePersonNotToDBCaller.*(*)) or execution(* *..savePersonNotToDBCallee.*(*))"/>
		<aop:advisor advice-ref="txm" pointcut-ref="save"/>
		<aop:aspect ref="logbeforesave">
			<!-- execution at the interface will intercept all the subclass -->
			<!-- the expression can not start with ..  -->
			<aop:before method="log" pointcut-ref="test" arg-names="person"/>
		</aop:aspect>
		<aop:aspect ref="logbeforeagainsave">
			<!-- execution at the interface will intercept all the subclass -->
			<!-- the expression can not start with ..  -->
			<aop:before method="log" pointcut-ref="test" arg-names="person"/>
		</aop:aspect>
	</aop:config>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<tx:advice id="txm" transaction-manager="transactionManager">
		<tx:attributes>  
	         <tx:method name="save" propagation="REQUIRED" rollback-for="RuntimeException"/>  
	     </tx:attributes> 
	</tx:advice>
	<context:property-placeholder location="classpath:jdbc.properties"/>
  	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
  		<property name="dataSource" ref="dataSource"/>
  	</bean>
  	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">  
        <property name="poolProperties">  
            <bean class="org.apache.tomcat.jdbc.pool.PoolProperties">  
                <property name="url" value="${jdbc.url}"/>  
                <property name="driverClassName" value="${jdbc.class}"/>  
                <property name="username" value="${jdbc.username}"/>  
                <property name="password" value="${jdbc.password}"/>  
                <property name="jmxEnabled" value="true"/>  
                <property name="testWhileIdle" value="false"/>  
                <property name="testOnBorrow" value="true"/>  
                <property name="validationInterval" value="30000"/>  
                <property name="testOnReturn" value="false"/>  
                <property name="validationQuery" value="select 1"/>  
                <property name="timeBetweenEvictionRunsMillis" value="30000"/>  
                <property name="maxActive" value="100"/>  
                <property name="initialSize" value="10"/>  
                <property name="maxWait" value="10000"/>  
                <property name="removeAbandonedTimeout" value="60"/>  
                <property name="minEvictableIdleTimeMillis" value="30000"/>  
                <property name="minIdle" value="10"/>  
                <property name="logAbandoned" value="true"/>  
                <property name="removeAbandoned" value="true"/>  
                <property name="jdbcInterceptors" value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer"/>  
            </bean>  
        </property> 
    </bean>
    <!--  
    <bean id="insert" class="org.springframework.jdbc.core.simple.SimpleJdbcInsert">
    	<constructor-arg type="javax.sql.DataSource" ref="dataSource"/>
    </bean>
    -->

</beans>