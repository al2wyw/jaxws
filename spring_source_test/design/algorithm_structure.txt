表达式求值:
1. 中缀表达式(通常人类识别的表达式，操作符在中间) -> 操作符栈， 结果栈(不好理解)  ->
后(前)缀表达式(计算机可以识别计算) -> 重新扫描后(前)缀表达式，借助单栈得到结果
前缀表达式对应于二叉树的前序遍历
中缀表达式对应于二叉树的中序遍历
后缀表达式对应于二叉树的后序遍历(一般用来构造二叉树，遍历后缀表达式，利用单栈)
2. 中缀表达式 -> 操作符栈(栈顶和入栈操作符使用优先级表比较优先级,栈顶较高则两个操作数出栈计算后再入操作数栈，操作符入栈，栈顶较低则直接入栈), 操作数栈(好理解) -> 结果
3. 递归实现

topK:


bitset:
缺点:
1. 现实对象无法很好的转换成数值，或容易出现相同的数值(hash)
2. 如果数值比较离散不平均(1,2,3,4,9999999)，出现多个位点浪费(hash后取模限定位点大小，但是要解决重复)
bloomfilter:
1. 实体目标数量，误判率 -> hash后需要取多少次值，位点大小
2. 实体数量一定，hash取值次数越多，误判越低， 位点越多，误判越低
